<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <PropertyGroup>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Version>0.15.2</Version>
    <Authors>Johan Larsson</Authors>
    <Description>Helpers &amp; extensions for writing Roslyn analyzers.</Description>
    <NeutralLanguage>en</NeutralLanguage>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/GuOrg/Gu.Roslyn.Extensions</PackageProjectUrl>
    <RepositoryUrl>https://github.com/GuOrg/Gu.Roslyn.Extensions</RepositoryUrl>
    <PackageTags>Roslyn analyzer</PackageTags>
    <PackageReleaseNotes>
      0.15.0
      BREAKING: recursion.Target() returns syntax node for invocation as it can be a local function
      0.14.4
      BUGFIX: QualifiedType == BaseTypeSyntax.
      0.14.3
      Only compare nullability if both types are annotated reference types.
      0.14.2
      Only compare nullability if both types are annotated.
      0.14.1
      Return annotated types from GetType()
      0.14.0
      BREAKING: Use Roslyn 3.5.0
      0.13.0
      BREAKING: Roslyn 3.3.1 and netstandard 2.0
      0.12.9
      BUGFIX: Handle default CodeStyleOptions
      0.12.8
      BUGFIX: Handle using C = C
      0.12.7
      BUGFIX: MemberPath when nullable annotations
      0.12.6
      BUGFIX: Infinite recursion when comparing generic parameter.
      0.12.5
      FEATURE: Recursion, helper for walking safely.
      BREAKING: Minor changes to signature of ExecutionWalker
    </PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>..\Gu.Roslyn.Extensions.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <PropertyGroup>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="Gu.Analyzers" Version="1.8.4" PrivateAssets="all" />
    <PackageReference Include="IDisposableAnalyzers" Version="3.4.5" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.5.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="3.3.1" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.3.1" PrivateAssets="all" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.0-beta-20204-02" PrivateAssets="all" />
    <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.261" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <PackageDownload Include="Microsoft.NETCore.App.Ref" Version="[3.1.0]" />
    <PackageReference Include="TunnelVisionLabs.ReferenceAssemblyAnnotator" Version="1.0.0-alpha.160" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="PublicAPI.Shipped.txt" />
    <AdditionalFiles Include="PublicAPI.Unshipped.txt" />
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
    
    <None Update="EnumerableExt.tt" Generator="TextTemplatingFileGenerator" LastGenOutput="EnumerableExt.generated.cs" />
    <Compile Update="EnumerableExt.generated.cs" DesignTime="True" AutoGen="True" DependentUpon="EnumerableExt.tt" />
  </ItemGroup>
</Project>
