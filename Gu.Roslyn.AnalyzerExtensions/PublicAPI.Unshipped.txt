Gu.Roslyn.AnalyzerExtensions.BaseObjectCreationExpressionSyntaxExt
*REMOVED*Gu.Roslyn.AnalyzerExtensions.ObjectCreationExpressionSyntaxExt

Gu.Roslyn.AnalyzerExtensions.ObjectCreationWalker.ObjectCreations.get -> System.Collections.Generic.IReadOnlyList<Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax!>!
*REMOVED*Gu.Roslyn.AnalyzerExtensions.ObjectCreationWalker.ObjectCreations.get -> System.Collections.Generic.IReadOnlyList<Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax!>!

Gu.Roslyn.AnalyzerExtensions.ObjectCreationWalker.RemoveAll(System.Predicate<Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax!>! match) -> void
Gu.Roslyn.AnalyzerExtensions.Recursion.Target(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitObjectCreationExpressionSyntax! node, string? caller = null, int line = 0) -> Gu.Roslyn.AnalyzerExtensions.Target<Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitObjectCreationExpressionSyntax!, Microsoft.CodeAnalysis.IMethodSymbol!, Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax!>?
Gu.Roslyn.AnalyzerExtensions.Recursion.TargetType(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitObjectCreationExpressionSyntax! node, string? caller = null, int line = 0) -> Gu.Roslyn.AnalyzerExtensions.Target<Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitObjectCreationExpressionSyntax!, Microsoft.CodeAnalysis.ITypeSymbol!, Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax!>?
override Gu.Roslyn.AnalyzerExtensions.ExecutionWalker<T>.VisitImplicitObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitObjectCreationExpressionSyntax! node) -> void
override Gu.Roslyn.AnalyzerExtensions.ObjectCreationWalker.VisitImplicitObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitObjectCreationExpressionSyntax! node) -> void

static Gu.Roslyn.AnalyzerExtensions.BaseObjectCreationExpressionSyntaxExt.FindArgument(this Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax! invocation, Microsoft.CodeAnalysis.IParameterSymbol! parameter) -> Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax?
static Gu.Roslyn.AnalyzerExtensions.BaseObjectCreationExpressionSyntaxExt.IsType(this Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax! node, Gu.Roslyn.AnalyzerExtensions.QualifiedType! type, Microsoft.CodeAnalysis.SemanticModel! semanticModel, System.Threading.CancellationToken cancellationToken) -> bool
static Gu.Roslyn.AnalyzerExtensions.BaseObjectCreationExpressionSyntaxExt.TargetDeclaration(this Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax! node, Microsoft.CodeAnalysis.SemanticModel! semanticModel, System.Threading.CancellationToken cancellationToken) -> Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax?
static Gu.Roslyn.AnalyzerExtensions.BaseObjectCreationExpressionSyntaxExt.TryFindArgument(this Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax! objectCreation, Microsoft.CodeAnalysis.IParameterSymbol! parameter, out Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax? argument) -> bool
static Gu.Roslyn.AnalyzerExtensions.BaseObjectCreationExpressionSyntaxExt.TryFindArgumentParams(this Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax! creation, Microsoft.CodeAnalysis.IParameterSymbol! parameter, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax!> arguments) -> bool
static Gu.Roslyn.AnalyzerExtensions.BaseObjectCreationExpressionSyntaxExt.TryGetTargetDeclaration(this Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax! node, Microsoft.CodeAnalysis.SemanticModel! semanticModel, System.Threading.CancellationToken cancellationToken, out Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax? declaration) -> bool
*REMOVED*static Gu.Roslyn.AnalyzerExtensions.ObjectCreationExpressionSyntaxExt.FindArgument(this Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax! invocation, Microsoft.CodeAnalysis.IParameterSymbol! parameter) -> Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax?
*REMOVED*static Gu.Roslyn.AnalyzerExtensions.ObjectCreationExpressionSyntaxExt.IsType(this Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax! node, Gu.Roslyn.AnalyzerExtensions.QualifiedType! type, Microsoft.CodeAnalysis.SemanticModel! semanticModel, System.Threading.CancellationToken cancellationToken) -> bool
*REMOVED*static Gu.Roslyn.AnalyzerExtensions.ObjectCreationExpressionSyntaxExt.TargetDeclaration(this Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax! node, Microsoft.CodeAnalysis.SemanticModel! semanticModel, System.Threading.CancellationToken cancellationToken) -> Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax?
*REMOVED*static Gu.Roslyn.AnalyzerExtensions.ObjectCreationExpressionSyntaxExt.TryFindArgument(this Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax! objectCreation, Microsoft.CodeAnalysis.IParameterSymbol! parameter, out Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax? argument) -> bool
*REMOVED*static Gu.Roslyn.AnalyzerExtensions.ObjectCreationExpressionSyntaxExt.TryFindArgumentParams(this Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax! creation, Microsoft.CodeAnalysis.IParameterSymbol! parameter, out System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax!> arguments) -> bool
*REMOVED*static Gu.Roslyn.AnalyzerExtensions.ObjectCreationExpressionSyntaxExt.TryGetTargetDeclaration(this Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax! node, Microsoft.CodeAnalysis.SemanticModel! semanticModel, System.Threading.CancellationToken cancellationToken, out Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax? declaration) -> bool

static Gu.Roslyn.AnalyzerExtensions.SemanticModelExt.GetSymbolSafe(this Microsoft.CodeAnalysis.SemanticModel! semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax! node, System.Threading.CancellationToken cancellationToken) -> Microsoft.CodeAnalysis.IMethodSymbol?
static Gu.Roslyn.AnalyzerExtensions.SemanticModelExt.TryGetSymbol(this Microsoft.CodeAnalysis.SemanticModel! semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax! node, Gu.Roslyn.AnalyzerExtensions.QualifiedType! expected, System.Threading.CancellationToken cancellationToken, out Microsoft.CodeAnalysis.IMethodSymbol? symbol) -> bool
static Gu.Roslyn.AnalyzerExtensions.SemanticModelExt.TryGetSymbol(this Microsoft.CodeAnalysis.SemanticModel! semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax! node, System.Threading.CancellationToken cancellationToken, out Microsoft.CodeAnalysis.IMethodSymbol? symbol) -> bool
*REMOVED*static Gu.Roslyn.AnalyzerExtensions.SemanticModelExt.GetSymbolSafe(this Microsoft.CodeAnalysis.SemanticModel! semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax! node, System.Threading.CancellationToken cancellationToken) -> Microsoft.CodeAnalysis.IMethodSymbol?
*REMOVED*static Gu.Roslyn.AnalyzerExtensions.SemanticModelExt.TryGetSymbol(this Microsoft.CodeAnalysis.SemanticModel! semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax! node, Gu.Roslyn.AnalyzerExtensions.QualifiedType! expected, System.Threading.CancellationToken cancellationToken, out Microsoft.CodeAnalysis.IMethodSymbol? symbol) -> bool
*REMOVED*static Gu.Roslyn.AnalyzerExtensions.SemanticModelExt.TryGetSymbol(this Microsoft.CodeAnalysis.SemanticModel! semanticModel, Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax! node, System.Threading.CancellationToken cancellationToken, out Microsoft.CodeAnalysis.IMethodSymbol? symbol) -> bool